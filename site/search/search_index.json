{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"delphi Documentation for relevant repositories to DRIFT's 2023-2024 project: LEADS. Table of Contents Project Original Repository MkDocs Documentation telemetry-stream TBD TBD ardupilot-logs-parsing TBD TBD kinematic-model Link TBD PTU-SDK \ud83d\udeab TBD team-drift.org \ud83d\udeab TBD","title":"Home"},{"location":"#delphi","text":"Documentation for relevant repositories to DRIFT's 2023-2024 project: LEADS.","title":"delphi"},{"location":"#table-of-contents","text":"Project Original Repository MkDocs Documentation telemetry-stream TBD TBD ardupilot-logs-parsing TBD TBD kinematic-model Link TBD PTU-SDK \ud83d\udeab TBD team-drift.org \ud83d\udeab TBD","title":"Table of Contents"},{"location":"about/","text":"Nosces inornatos victori Se roganda minimas donec inducere videntur Lorem markdownum, esses caelitibus viro. Opus nare bimari media explicat excidit usque. Tui par equique Aetne, reccidat a margine ignibus miracula numen nec talibus carmine tristisque. Victum vero meruisse arvis exegit quare cum haesit, at fronde scelus. Nostroque dicenti causas et cinxit primusque dolor Laetaris indoluit concordare cruentior inde quo iam tum quater, humi est! Fidis sed ardent, Nileus aeque carpentem et orbes. Et sorori quoque ferro manibus carchesia dedit: agmina pariente sublimis auctor. Vocisque laniger audet Romana aures Manu infans praebet cladis ferrumque cervus: gravis mea posita vero, pars niveum, terreat caelo agna mille. Est oculosque coagula memorque, modo Troades fetus si glacialis elisarum, nullis sine fumantiaque esse. Una solet et fuit est fuit pluma sic prodes marem odit Eurynomus mensis; qui. if (minimize_technology_kilobit + command(-4, ergonomics_intranet_core)) { textRwSnow = grayscaleAppFrozen + kvm(-5, 2, sdRemoteFavorites); } else { spiderLeftPop = 4; username_port(3); } var port_sd = host(box_syn.leopard_point(terahertzIos(wins), truncate_mips, noc_drm), 1, mount_function(-4)); capacityFlash = net_only(host_trackball, tcp_website, disk) + atm_io_primary; if (cachePciOs < 11) { bluSoftwarePretest *= 4; optic_infotainment(parallel_search, ribbon_rj / 2); } Amato coniunctaque victa Luctantemque procul adversae quarum at concussit ignis fraternis Cecropio est, dies imagine, non cantus admota tener! Terra est illuc sedit: et sed fui convertit ille , capillos, ut fruges, sed Saturnia Taenarides. Esse est, esse, funes aere inclinat, leones cogit inprobat domoque arbore fere. Numina quae: geminae: si dumque oritur circumspice tolles arbitrium tempora pinus. Tollit quem se tamen videt hunc curam Nec urguent ignotas perluitur patris Curvos iam vapor aequore resupino Sidus falsi venenis pressistis madida Iovis Se ultor pedibusve sumptis Pylos et manuque Pars ambae: nec quam veneni, videri increpat hominum utque, ait est Olympi gerit. Muneris propiora candida. Faciendo deus; devia notare, quae dentes socerque. Loco luctu huic etiam hausit et carmina, saepe magna nec. Nobiscum laudemque externis venatu Phoeboque, et nobis rami omen Ericthonium color attonitum pecudes in meruisse confundere vidit. Iam antrum de in, nec sanguine, iram Phoebeamque iura.","title":"Nosces inornatos victori"},{"location":"about/#nosces-inornatos-victori","text":"","title":"Nosces inornatos victori"},{"location":"about/#se-roganda-minimas-donec-inducere-videntur","text":"Lorem markdownum, esses caelitibus viro. Opus nare bimari media explicat excidit usque. Tui par equique Aetne, reccidat a margine ignibus miracula numen nec talibus carmine tristisque. Victum vero meruisse arvis exegit quare cum haesit, at fronde scelus.","title":"Se roganda minimas donec inducere videntur"},{"location":"about/#nostroque-dicenti-causas-et-cinxit-primusque-dolor","text":"Laetaris indoluit concordare cruentior inde quo iam tum quater, humi est! Fidis sed ardent, Nileus aeque carpentem et orbes. Et sorori quoque ferro manibus carchesia dedit: agmina pariente sublimis auctor.","title":"Nostroque dicenti causas et cinxit primusque dolor"},{"location":"about/#vocisque-laniger-audet-romana-aures","text":"Manu infans praebet cladis ferrumque cervus: gravis mea posita vero, pars niveum, terreat caelo agna mille. Est oculosque coagula memorque, modo Troades fetus si glacialis elisarum, nullis sine fumantiaque esse. Una solet et fuit est fuit pluma sic prodes marem odit Eurynomus mensis; qui. if (minimize_technology_kilobit + command(-4, ergonomics_intranet_core)) { textRwSnow = grayscaleAppFrozen + kvm(-5, 2, sdRemoteFavorites); } else { spiderLeftPop = 4; username_port(3); } var port_sd = host(box_syn.leopard_point(terahertzIos(wins), truncate_mips, noc_drm), 1, mount_function(-4)); capacityFlash = net_only(host_trackball, tcp_website, disk) + atm_io_primary; if (cachePciOs < 11) { bluSoftwarePretest *= 4; optic_infotainment(parallel_search, ribbon_rj / 2); }","title":"Vocisque laniger audet Romana aures"},{"location":"about/#amato-coniunctaque-victa","text":"Luctantemque procul adversae quarum at concussit ignis fraternis Cecropio est, dies imagine, non cantus admota tener! Terra est illuc sedit: et sed fui convertit ille , capillos, ut fruges, sed Saturnia Taenarides. Esse est, esse, funes aere inclinat, leones cogit inprobat domoque arbore fere. Numina quae: geminae: si dumque oritur circumspice tolles arbitrium tempora pinus. Tollit quem se tamen videt hunc curam Nec urguent ignotas perluitur patris Curvos iam vapor aequore resupino Sidus falsi venenis pressistis madida Iovis","title":"Amato coniunctaque victa"},{"location":"about/#se-ultor-pedibusve-sumptis-pylos-et-manuque","text":"Pars ambae: nec quam veneni, videri increpat hominum utque, ait est Olympi gerit. Muneris propiora candida. Faciendo deus; devia notare, quae dentes socerque. Loco luctu huic etiam hausit et carmina, saepe magna nec. Nobiscum laudemque externis venatu Phoeboque, et nobis rami omen Ericthonium color attonitum pecudes in meruisse confundere vidit. Iam antrum de in, nec sanguine, iram Phoebeamque iura.","title":"Se ultor pedibusve sumptis Pylos et manuque"},{"location":"kinematic_model/","text":"Kinematic Model of a Moving Drone's Telemetry Stream This notebook represents a kinematic model of telemetry data from a moving drone. A kinematic model describes the movement of objects using variables such as position, velocity, and acceleration, without considering the underlying forces that cause the motion. In this case, we are predicting the next position of the drone based on its current position and velocity. Methodology Data Preprocessing The first step of the notebook is the data preprocessing, where the mavlink data of the drone and the ground control station (GCS) are loaded. We add a prefix to their packet type to be easily identified (UAV_/GCS_). The time_boot_ms column which provides the system time since boot, is normalized by the minimum time to start the timestamp from zero. All of them are then combined into one dataframe, sorted by time in ascending order, and some columns are converted into their correct units. Conversion to East, North, Up (ENU) coordinates In the field of aerial vehicles, including drones, a common coordinate system used is the East, North, Up (ENU) system. In this system: The x-axis points towards the North. The y-axis points towards the East. The z-axis points Upwards. To transform the GPS (latitude, longitude, altitude) coordinates into ENU, we use the geodetic2enu function from the pymap3d library. The conversion needs a reference point, which is in this case the starting point of the drone. \u26a0\ufe0f E, N, U is not in the same order as X, Y, Z. The result of pymap3d.geodetic2enu() must be unpacked like y, x, z = pymap3d.geodetic2enu() Kinematic Prediction To predict the position of the drone in the next timestamp, we use a basic kinematic equation: position_next = position_current + velocity_current * time_to_next Where time_to_next is the difference in time between two consecutive timestamps. This equation assumes that the drone moves at a constant velocity, thus it's a simple approximation that does not consider any changes in velocity (acceleration). In this example, we are forecasting the drone's location for the upcoming timestamp. This allows us to compare our prediction with the actual reported location at that subsequent timestamp. Evaluation The predictions are evaluated by calculating the Euclidean distance between the predicted and actual positions. The Euclidean distance between two points in 3D space is calculated as follows: distance = sqrt((x1-x2)^2 + (y1-y2)^2 + (z1-z2)^2) The distances are then converted into centimeters and visualized by a histogram. What these distances mean The distances calculated in this model represent the adjustments anticipated in real-time drone operations. Specifically, the gimbal on the drone will follow each predicted vector until it reaches the predicted location. Then it will need to \"jump\" to the next actual reported location. These 'jumps' are represented by the distances we have calculated. Assuming that the reported locations are completely accurate, these distances provide a good estimation of the potential error expected in the model. They could be used to inform the design parameters of the receiving device on the drone. However, it's important to consider some degree of error in the reported location data itself. Additionally, the mechanical inaccuracies or latency in the drone's pan-tilt unit can also contribute to the overall model error. Therefore, due to the combined implications of location data inaccuracies and the mechanical response of the drone's pan-tilt unit, the calculated error should not be solely used to determine the design requirements of the receiving device on the drone. Visualization Although drone motion in 3D space is best visualized with a 3D plot, 2D plots might be more convenient in some situations. Thus, both 3D and 2D plots are made, where each point corresponds to a timestamp, and a line is drawn to the point that represents the predicted position for the next timestamp. Fourier Transform Analysis I used the Fourier Transform as a tool to analyze the inconsistency in the vertical velocity ('vz') of the drone. Initially, the error in the z-direction of the drone movement wasn't making sense, so I used the spectral analysis to examine the dominant frequencies that make up the 'vz' signal. On plotting these frequencies, I noticed a significant spike at approximately 1.2Hz. Interestingly, this dominant frequency at 1.2Hz matched the frequency observed from my smartphone's accelerometer while I was walking with the drone. In essence, the Fourier Transform helped me realize that the drone's vertical velocity was significantly influenced by my walking rhythm.","title":"Kinematic Model"},{"location":"kinematic_model/#kinematic-model-of-a-moving-drones-telemetry-stream","text":"This notebook represents a kinematic model of telemetry data from a moving drone. A kinematic model describes the movement of objects using variables such as position, velocity, and acceleration, without considering the underlying forces that cause the motion. In this case, we are predicting the next position of the drone based on its current position and velocity.","title":"Kinematic Model of a Moving Drone's Telemetry Stream"},{"location":"kinematic_model/#methodology","text":"","title":"Methodology"},{"location":"kinematic_model/#data-preprocessing","text":"The first step of the notebook is the data preprocessing, where the mavlink data of the drone and the ground control station (GCS) are loaded. We add a prefix to their packet type to be easily identified (UAV_/GCS_). The time_boot_ms column which provides the system time since boot, is normalized by the minimum time to start the timestamp from zero. All of them are then combined into one dataframe, sorted by time in ascending order, and some columns are converted into their correct units.","title":"Data Preprocessing"},{"location":"kinematic_model/#conversion-to-east-north-up-enu-coordinates","text":"In the field of aerial vehicles, including drones, a common coordinate system used is the East, North, Up (ENU) system. In this system: The x-axis points towards the North. The y-axis points towards the East. The z-axis points Upwards. To transform the GPS (latitude, longitude, altitude) coordinates into ENU, we use the geodetic2enu function from the pymap3d library. The conversion needs a reference point, which is in this case the starting point of the drone. \u26a0\ufe0f E, N, U is not in the same order as X, Y, Z. The result of pymap3d.geodetic2enu() must be unpacked like y, x, z = pymap3d.geodetic2enu()","title":"Conversion to East, North, Up (ENU) coordinates"},{"location":"kinematic_model/#kinematic-prediction","text":"To predict the position of the drone in the next timestamp, we use a basic kinematic equation: position_next = position_current + velocity_current * time_to_next Where time_to_next is the difference in time between two consecutive timestamps. This equation assumes that the drone moves at a constant velocity, thus it's a simple approximation that does not consider any changes in velocity (acceleration). In this example, we are forecasting the drone's location for the upcoming timestamp. This allows us to compare our prediction with the actual reported location at that subsequent timestamp.","title":"Kinematic Prediction"},{"location":"kinematic_model/#evaluation","text":"The predictions are evaluated by calculating the Euclidean distance between the predicted and actual positions. The Euclidean distance between two points in 3D space is calculated as follows: distance = sqrt((x1-x2)^2 + (y1-y2)^2 + (z1-z2)^2) The distances are then converted into centimeters and visualized by a histogram.","title":"Evaluation"},{"location":"kinematic_model/#what-these-distances-mean","text":"The distances calculated in this model represent the adjustments anticipated in real-time drone operations. Specifically, the gimbal on the drone will follow each predicted vector until it reaches the predicted location. Then it will need to \"jump\" to the next actual reported location. These 'jumps' are represented by the distances we have calculated. Assuming that the reported locations are completely accurate, these distances provide a good estimation of the potential error expected in the model. They could be used to inform the design parameters of the receiving device on the drone. However, it's important to consider some degree of error in the reported location data itself. Additionally, the mechanical inaccuracies or latency in the drone's pan-tilt unit can also contribute to the overall model error. Therefore, due to the combined implications of location data inaccuracies and the mechanical response of the drone's pan-tilt unit, the calculated error should not be solely used to determine the design requirements of the receiving device on the drone.","title":"What these distances mean"},{"location":"kinematic_model/#visualization","text":"Although drone motion in 3D space is best visualized with a 3D plot, 2D plots might be more convenient in some situations. Thus, both 3D and 2D plots are made, where each point corresponds to a timestamp, and a line is drawn to the point that represents the predicted position for the next timestamp.","title":"Visualization"},{"location":"kinematic_model/#fourier-transform-analysis","text":"I used the Fourier Transform as a tool to analyze the inconsistency in the vertical velocity ('vz') of the drone. Initially, the error in the z-direction of the drone movement wasn't making sense, so I used the spectral analysis to examine the dominant frequencies that make up the 'vz' signal. On plotting these frequencies, I noticed a significant spike at approximately 1.2Hz. Interestingly, this dominant frequency at 1.2Hz matched the frequency observed from my smartphone's accelerometer while I was walking with the drone. In essence, the Fourier Transform helped me realize that the drone's vertical velocity was significantly influenced by my walking rhythm.","title":"Fourier Transform Analysis"}]}